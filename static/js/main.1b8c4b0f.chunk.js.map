{"version":3,"sources":["features/button/buttonSlice.js","features/clock/clockSlice.js","features/window/windowSlice.js","features/combo/comboSlice.js","features/items/itemFactory.js","features/items/itemSlice.js","features/score/scoreSlice.js","redux/reducers.js","commons/utils.js","redux/selectors.js","features/clock/time.js","features/clock/clockSaga.js","features/button/buttonSaga.js","features/combo/comboSaga.js","features/items/itemSaga.js","redux/sagas.js","redux/configure-store.js","features/button/buttonStyle.js","features/button/buttonMain.jsx","features/combo/comboStyle.js","features/combo/comboMain.jsx","features/score/scoreMain.jsx","features/window/page.jsx","features/items/shop.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["name","buttonSlice","createSlice","initialState","isPressed","reducers","press","_","release","extraReducers","button","reducer","actions","initialDate","Date","now","genesis","playthrough","current","clockSlice","tick","state","payload","adjust","clock","selectClock","windowSlice","default","isVisible","hasOwnProperty","id","notVisible","visible","selectWindow","comboSlice","value","max","isOverflowing","decrement","flush","toggleOverflow","bool","buttonPress","type","combo","selectCombo","defaultItem","description","hooks","defaultGenerator","inflation","formula","self","Math","round","cost","ammount","defaultCog","getAttr","obj","attr","_default","undefined","Item","base","defaults","this","init","NaN","purchased","icon","identifier","index","__hooks__","__effects__","resoult","except","Object","getOwnPropertyNames","forEach","includes","push","getAllAttr","item","Generator","baseIncome","Cog","Items","itemData","map","print","purchase","request","createAction","canceled","finalize","itemSlice","update","items","itemIndex","active","rest","selectItems","scoreSlice","losses","income","updateItems","score","selectScore","regexExcept","exceptions","RegExp","join","console","log","selectComboToDisplay","createSelector","selectScoreToDisplay","magnitude","string","toString","toUpperCase","len","length","repeat","split","selectGeneratorIncome","flatMap","effects","reduce","a","b","sumEffects","prev","curr","some","r","indexOf","matchHooks","flat","factor","sec","timeUnits","Time","milliseconds","unit","floor","days","hours","mins","secs","mss","pastunix","handleClock","clockSaga","pageId","delay","all","select","_window","clockAsync","call","since","toSync","put","clockAdjust","clockTick","fork","handleByttonRelease","buttonSaga","take","race","buttonPressed","timeout","buttonRelease","handleComboDecrement","_toggleOverflow","handleComboOverflow","comboSaga","interval","comboState","breakChain","comboDecrement","duration","hanndleItemPurchase","hanndleUpdate","itemSaga","budget","totalIncome","f","regExAction","action","test","takeEvery","rootSaga","sagas","saga","spawn","sagaMiddleware","createSagaMiddleware","configureStore","rootReducer","middleware","reduxThunk","devTools","process","run","styled","ButtonMain","dispatch","useDispatch","onClick","StyledThermometer","div","ThermometerFill","span","ComboBar","comboToDisplay","useSelector","SingleDigit","digit","FullScore","Page","alias","children","onChange","onVisibilityChange","Shop","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","theme","document","getElementById"],"mappings":"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","file":"static/js/main.1b8c4b0f.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst name = 'button';\r\nconst initialState = {\r\n    isPressed: false\r\n};\r\n\r\nconst buttonSlice = createSlice({\r\n    name,\r\n    initialState,\r\n    reducers: {\r\n        press: (_)=>{_.isPressed=true},\r\n        release: (_)=>{_.isPressed=false}\r\n    },\r\n    extraReducers: {\r\n\r\n    }\r\n})\r\nconst button = {[name]: buttonSlice.reducer}\r\nexport const {press, release} = buttonSlice.actions\r\nexport const selectButton = state => state[name]\r\nexport default button","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialDate = Date.now()\r\nconst name = 'clock';\r\nconst initialState = {\r\n    //unix timestamp <- easy to calculate time flow\r\n    genesis: initialDate, //when we 1st started playing\r\n    playthrough: initialDate, //time since reset/advancment etc\r\n    current: initialDate, // last registered time\r\n};\r\n\r\nconst clockSlice = createSlice({\r\n    name,\r\n    initialState,\r\n    reducers: {\r\n\r\n        tick: ( state, {payload} ) => {\r\n            \r\n            state.current = payload\r\n        },\r\n\r\n        adjust: ( ) => { }\r\n\r\n    },\r\n    extraReducers: {\r\n\r\n    }\r\n})\r\nconst clock = {[name]:clockSlice.reducer}\r\nexport const { tick, adjust } = clockSlice.actions\r\nexport const selectClock = state => state[name]\r\nexport default clock","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst name = 'window';\r\nconst initialState = {\r\n    default: true\r\n};\r\nconst windowSlice = createSlice({\r\n    name,\r\n    initialState,\r\n    reducers: {\r\n        isVisible: ( state, payload ) => {\r\n            if (payload.hasOwnProperty('id')) {\r\n                state[payload.id] = true\r\n            } else state.default = true\r\n        },\r\n        notVisible: ( state, payload ) => {\r\n            if (payload.hasOwnProperty('id')) {\r\n                state[payload.id] = false\r\n            } else state.default = false\r\n        }\r\n    }\r\n})\r\nconst visible = {[name]: windowSlice.reducer}\r\nexport const { isVisible, notVisible } = windowSlice.actions\r\nexport const selectWindow = state => state[name]\r\nexport default visible","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { press as buttonPress } from \"../button/buttonSlice\";\r\n\r\n\r\nconst name = 'combo';\r\nconst initialState = {\r\n    value: 0,\r\n    max: 100,\r\n    isOverflowing: false\r\n};\r\n\r\nconst comboSlice = createSlice({\r\n    name,\r\n    initialState,\r\n    reducers: {\r\n        decrement: ( _, {payload: flush}) => {\r\n            _.value -= !flush ? _.max/100 : _.max \r\n        },\r\n        toggleOverflow: ( _, { payload: bool}) => {\r\n            _.isOverflowing = bool? bool : !_.isOverflowing  \r\n        },\r\n    },\r\n    extraReducers: {\r\n        [buttonPress.type]: ( _ ) => {\r\n            if ( _.value < _.max ) {\r\n                _.value ++\r\n            } else _.value = _.max\r\n        }\r\n    }\r\n})\r\nconst combo = {[name]: comboSlice.reducer}\r\nexport const { decrement, toggleOverflow } = comboSlice.actions\r\nexport const selectCombo = state => state[name]\r\nexport default combo\r\n","import itemData from \"./items.json\"\r\n\r\nconst defaultItem = {\r\n    description: \"this is default descriptor for item -- u shuld not see this\",\r\n    hooks: [ \"*\" ]\r\n}\r\n\r\nconst defaultGenerator = {\r\n    inflation: 1.15,\r\n    formula: self => Math.round(self.cost*self.inflation**self.ammount),\r\n    description: \"this is default descriptor for generator -- u shuld not see this\",\r\n    hooks: [ \"Sps\" ],\r\n}\r\n\r\nconst defaultCog = {\r\n    description: \"this is default descriptor for cog -- u shuld not see this\",\r\n}\r\n\r\nfunction getAttr(obj, attr, _default=undefined) {\r\n    return obj.hasOwnProperty(attr) ? obj[attr] : _default\r\n}\r\n\r\nfunction getAllAttr(obj, except=[]) {\r\n    const resoult = []\r\n    Object.getOwnPropertyNames(obj).forEach((attr)=>{\r\n        if (!except.includes(attr)) {\r\n            resoult.push(attr)\r\n        }\r\n    })\r\n    return resoult\r\n}\r\n\r\n\r\nclass Item {\r\n    defaults = defaultItem\r\n\r\n    init(base) {\r\n        this.description = getAttr(base, \"description\", this.defaults.description)\r\n\r\n        this.cost = getAttr(base, \"cost\", NaN)\r\n        this.visible = getAttr(base, \"visible\", false)\r\n        this.purchased = false\r\n\r\n        this.type = getAttr(base, \"type\", \"Item\")\r\n        this.name = getAttr(base, \"name\", \"no-name\")\r\n        this.icon = getAttr(base, \"icon\", \"defaultCogIcon.svg\")\r\n        \r\n        this.identifier = `${this.type}/${this.name}`\r\n        this.index = base.index\r\n\r\n        this.__hooks__ = [\r\n            this.identifier, this.type,\r\n            ...getAttr(this.defaults, \"hooks\", []),\r\n            ...getAttr(base, \"hooks\", [])]\r\n\r\n        this.__effects__ = [\r\n            ...getAttr(this.defaults, \"effects\", []),\r\n            ...getAttr(base, \"effects\", [])\r\n        ]\r\n    }\r\n\r\n    constructor(base) {\r\n        this.init(base)\r\n    }\r\n    static print(obj) {\r\n        const resoult = {}\r\n        getAllAttr(obj, ['defaults']).forEach(item => {\r\n            resoult[item] = obj[item]\r\n        })\r\n        return resoult\r\n    }\r\n}\r\n\r\nexport class Generator extends Item {\r\n    defaults = defaultGenerator\r\n    constructor(base) {\r\n        super(base).init(base)\r\n        this.ammount = getAttr(base, \"ammount\", 0)\r\n        this.inflation = getAttr(base, \"inflation\", this.defaults.inflation)\r\n        this.formula = getAttr(base, \"formula\", this.defaults.formula)\r\n        this.baseIncome = getAttr(base, \"baseIncome\", 0)\r\n    }\r\n}\r\n\r\nexport class Cog extends Item {\r\n    defaults = defaultCog\r\n    constructor(base) {\r\n        super(base).init(base)\r\n    }\r\n}\r\n\r\nconst Items = itemData.map((item, index) => {\r\n    switch (item.type) {\r\n        case \"Generator\":\r\n            return Item.print(new Generator({...item, index}))\r\n        case \"Cog\":\r\n            return Item.print(new Cog({...item, index}))\r\n        default:\r\n            return Item.print(new Item({...item, index}))\r\n    }\r\n})\r\n\r\nexport default Items","import { createAction, createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport Items from \"./itemFactory\"\r\n\r\nconst name = \"items\"\r\nexport const purchase = {\r\n    request: createAction(`${name}/purchase/request`),\r\n    canceled: createAction(`${name}/purchase/cancled`),\r\n    finalize: createAction(`${name}/purchase/finalize`, function prepere(item, cost){\r\n        return {\r\n            payload: {\r\n                item,\r\n                cost\r\n            }\r\n        }\r\n    })\r\n}\r\nconst initialState = [...Items]\r\n\r\nconst itemSlice = createSlice({\r\n    name,\r\n    initialState,\r\n    reducers: {\r\n        update: () => {}\r\n    },\r\n    extraReducers: {\r\n        [purchase.finalize]: ( items, { payload } ) => {\r\n            const itemIndex = payload.item.index\r\n                if (items[itemIndex].hasOwnProperty(\"ammount\")) {\r\n                    items[itemIndex].ammount++ \r\n                } else {\r\n                    items[itemIndex].visible = false\r\n                    items[itemIndex].purchased = true\r\n                    items[itemIndex].__effects__ = items[itemIndex].__effects__.map(({active, ...rest})=>(\r\n                        {active: true, ...rest}\r\n                    ))\r\n                }\r\n        }\r\n    }\r\n})\r\nconst items = { [name]: itemSlice.reducer }\r\nexport const { update } = itemSlice.actions\r\nexport const selectItems = state => state[name]\r\nexport default items\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { update as updateItems } from \"../items/itemSlice\"\r\nimport { purchase } from \"../items/itemSlice\";\r\nimport { press as buttonPress } from \"../button/buttonSlice\";\r\nimport { tick } from \"../clock/clockSlice\";\r\n\r\nconst name = 'score';\r\nconst initialState = {\r\n    value: 0,\r\n    losses: 0,\r\n    income: 0\r\n};\r\n\r\nconst scoreSlice = createSlice({\r\n    name,\r\n    initialState,\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers: {\r\n        [buttonPress.type]: ( _ ) => {\r\n            _.value ++\r\n        },\r\n        [purchase.finalize]: ( _, {payload}) => {\r\n            _.value -= payload.cost\r\n            _.losses += payload.cost\r\n        },\r\n        [updateItems]: ( _, {payload}) => {\r\n            _.income = payload.income\r\n        },\r\n        [tick]: ( _ ) => {\r\n            _.value += _.income\r\n        }\r\n    }\r\n});\r\nconst score = {[name]: scoreSlice.reducer}\r\nexport const { } = scoreSlice.actions;\r\nexport const selectScore = state => state[name];\r\nexport default score\r\n","import button from \"../features/button/buttonSlice\"\r\nimport clock from \"../features/clock/clockSlice\"\r\nimport visible from \"../features/window/windowSlice\"\r\nimport combo from \"../features/combo/comboSlice\"\r\nimport score from \"../features/score/scoreSlice\"\r\nimport items from \"../features/items/itemSlice\"\r\n\r\nconst reducers = {\r\n    ...clock,\r\n    ...visible,\r\n    ...button,\r\n    ...combo,\r\n    ...score,\r\n    ...items,\r\n}\r\n\r\nexport default reducers","export function matchHooks(item, effects) {\r\n    return effects.reduce((prev, curr) => {\r\n        if (item.__hooks__.some(r=>curr.hooks.indexOf(r) >= 0) && curr.active) {\r\n            prev.push(curr)\r\n        }\r\n        return prev\r\n    }, [])\r\n}\r\n\r\nexport function sumEffects(effects) {\r\n    return [\r\n        effects.reduce((a, b) => a + (b['flat'] || 0), 0),\r\n        effects.reduce((a, b) => a * (b['factor'] || 1), 1)\r\n    ]\r\n}\r\n\r\nexport function regexExcept(type, exceptions) {\r\n    return new RegExp(`^${type}.*(?<!${exceptions.join(')$.*(?<!')})$`)\r\n}\r\n\r\nconsole.log(regexExcept(\"items\", [\"request\", \"update\"]));","import { createSelector } from \"@reduxjs/toolkit\"\r\n\r\nimport { matchHooks, sumEffects } from \"../commons/utils\"\r\n\r\nexport { selectClock } from \"../features/clock/clockSlice\"\r\nexport { selectWindow } from \"../features/window/windowSlice\"\r\nexport { selectButton } from \"../features/button/buttonSlice\"\r\nexport { selectCombo } from \"../features/combo/comboSlice\"\r\nexport { selectScore } from \"../features/score/scoreSlice\"\r\nexport { selectItems} from \"../features/items/itemSlice\"\r\n\r\nexport const selectComboToDisplay = createSelector(\r\n    [state => state.combo.value,\r\n     state => state.combo.max],\r\n    (value, max) => {\r\n        return `${(value*100)/max}%`\r\n    }\r\n)\r\n\r\nexport const selectScoreToDisplay = createSelector(\r\n    [state => state.score.value,\r\n     state => 8,   // <- later select max magnitude for score\r\n     state => 10], // <- later select base of score display (2 || 4 || 8 || 10 || 16 || 32)\r\n    (value, magnitude, base) => {\r\n        const raund = Math.round(value)\r\n        const string = raund.toString(base).toUpperCase()\r\n        const len = string.length\r\n        if (len > magnitude) {\r\n            return 'x'.repeat(magnitude)\r\n        }\r\n        return (\"0\".repeat(magnitude-len) + string).split(\"\")\r\n    }\r\n)\r\n\r\nexport const selectGeneratorIncome = createSelector([\r\n    state => state.items.flatMap(({__effects__}) => __effects__),\r\n    (state, item) => state.items[item.index]\r\n    ], (effects, item) => {\r\n        const matchingEffects = matchHooks(item, effects)\r\n        const [flat, factor] = sumEffects(matchingEffects)\r\n        return (item.baseIncome + flat) * factor * item.ammount\r\n    }\r\n)\r\n","\r\nexport const ms = 1\r\nexport const sec = 1000\r\nexport const min = 60000\r\nexport const hour = 3600000\r\nexport const day = 86400000\r\nexport const timeUnits = [ day, hour, min, sec, ms ]\r\n\r\n\r\nexport default class Time {\r\n    static parse(milliseconds) {\r\n        const resoult = []\r\n        let rest = milliseconds\r\n        for (let unit of timeUnits ) {\r\n            resoult.push(Math.floor(rest/unit))\r\n            rest = rest % unit\r\n        }\r\n        return {\r\n            days: resoult[0],\r\n            hours: resoult[1],\r\n            mins: resoult[2],\r\n            secs: resoult[3],\r\n            mss: resoult[4]\r\n        }\r\n    }\r\n    static since(pastunix, unit=sec) {\r\n        return Math.floor((Date.now() - pastunix)/unit)\r\n    }\r\n}","import { all, call, delay, fork, put, select } from \"redux-saga/effects\"\r\n\r\nimport { selectWindow, selectClock } from \"../../redux/selectors\"\r\nimport {\r\n    tick as clockTick,\r\n    adjust  as clockAdjust } from \"../../redux/actions\"\r\n\r\nimport Time from \"./time\"\r\n\r\n\r\nconst TICK = 995\r\n\r\nfunction* handleClock(pageId='default') {\r\n    let clockAsync\r\n    while ( true ) {\r\n        yield delay(TICK)\r\n        const [_window, clock] = yield all([\r\n            select(selectWindow),\r\n            select(selectClock)\r\n        ])\r\n\r\n        if (_window[pageId]) {\r\n            if (clockAsync) {\r\n                const toSync = yield call(Time.since, clock.current)\r\n                yield put(clockAdjust(toSync))\r\n                clockAsync = false\r\n            }\r\n\r\n            yield put(clockTick(Date.now()))\r\n        } else clockAsync = true\r\n    } \r\n}\r\n\r\nexport default function* clockSaga() {\r\n    yield fork(handleClock)\r\n}\r\n\r\n","import { delay, fork, put, race, take } from \"redux-saga/effects\";\r\n\r\nimport {\r\n    buttonPress,\r\n    buttonRelease } from \"../../redux/actions\"\r\n\r\nfunction* handleByttonRelease() {\r\n    while ( true ) {\r\n        yield take(buttonPress.type)\r\n        while ( true ) {\r\n            const { timeout } = yield race({\r\n                buttonPressed: take(buttonPress.type),\r\n                timeout: delay(150)\r\n            })\r\n            if (timeout) {\r\n                yield put(buttonRelease())\r\n                break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default function* buttonSaga() {\r\n    yield fork(handleByttonRelease)\r\n}","import { delay, fork, put, race, select, take } from \"redux-saga/effects\";\r\n\r\nimport { selectCombo as comboState } from \"../../redux/selectors\";\r\nimport { \r\n    buttonPress,\r\n    buttonRelease,\r\n    comboDecrement,\r\n    toggleOverflow } from \"../../redux/actions\"\r\n\r\nfunction* handleComboDecrement() {\r\n    while ( true ) {\r\n        yield take(buttonRelease.type)\r\n        let interval = 160\r\n        while ( true ) {\r\n\r\n            const combo = yield select(comboState);\r\n\r\n            if ( combo.value <= 0 ) break;\r\n\r\n            const { breakChain } = yield race({\r\n                breakChain: take(buttonPress.type),\r\n                timeout: delay(interval)\r\n            });\r\n\r\n            if ( breakChain ) break;\r\n\r\n            if ( !combo.isOverflowing ) {\r\n                yield put( comboDecrement() );\r\n                interval = interval < 50 ? 50 : Math.round(interval*0.85);\r\n            }\r\n        };\r\n    };\r\n}\r\n\r\nfunction* _toggleOverflow(duration) {\r\n    yield put(toggleOverflow(true))\r\n    yield delay(duration)\r\n    yield put(toggleOverflow(false))\r\n    yield put(comboDecrement(true))\r\n}\r\n\r\nfunction* handleComboOverflow() {\r\n    while ( true ) {\r\n        yield take(buttonPress.type)\r\n\r\n        const combo = yield select(comboState)\r\n\r\n        if (combo.value < combo.max) { } else {\r\n            // remember to make it not statick valiue\r\n            yield _toggleOverflow(5000)\r\n        }\r\n    }\r\n}\r\n\r\nexport default function* comboSaga() {\r\n    yield fork(handleComboDecrement)\r\n    yield fork(handleComboOverflow)\r\n};","import { all, put, select, takeEvery } from \"redux-saga/effects\"\r\n\r\nimport { selectGeneratorIncome, selectItems, selectScore } from \"../../redux/selectors\"\r\nimport { purchase, updateItems } from \"../../redux/actions\"\r\nimport { regexExcept } from \"../../commons/utils\"\r\n\r\nfunction* hanndleItemPurchase({payload}) {\r\n    const {value: budget} = yield select(selectScore)\r\n    let cost = payload.cost\r\n    if (payload.formula) {\r\n        cost = payload.formula(payload)\r\n    }\r\n    if ( cost <= budget ) {\r\n        yield put(purchase.finalize(payload, cost))\r\n    } else {\r\n        yield put(purchase.canceled(\"insuffiecnt budget\"))\r\n    }\r\n}\r\n\r\nfunction* hanndleUpdate() {\r\n    const items = yield select(selectItems)\r\n    let totalIncome = 0\r\n    for (let item of items) {\r\n        if (item.type === \"Generator\") {\r\n            totalIncome += yield select(state => selectGeneratorIncome(state, item))\r\n        }\r\n    }\r\n    yield put(updateItems({income: totalIncome}))\r\n}\r\n\r\nconst exceptions = [\"request\", \"update\"]\r\nconst regExAction = action => regexExcept(\"items\", exceptions).test(action.type)\r\n\r\nexport default function* itemSaga() {\r\n    yield takeEvery(purchase.request.type, hanndleItemPurchase)\r\n    yield takeEvery( action => regExAction(action), hanndleUpdate)\r\n}","import { all, spawn, call } from \"redux-saga/effects\";\r\n\r\nimport clockSaga from \"../features/clock/clockSaga\";\r\nimport buttonSaga from \"../features/button/buttonSaga\"\r\nimport comboSaga from \"../features/combo/comboSaga\"\r\nimport itemSaga from \"../features/items/itemSaga\";\r\n\r\nexport default function* rootSaga () {\r\n    const sagas = [\r\n        clockSaga,\r\n        buttonSaga,\r\n        comboSaga,\r\n        itemSaga,\r\n    ];\r\n  \r\n    yield all(sagas.map(saga =>\r\n      spawn(function* () {\r\n        while (true) {\r\n          try {\r\n            yield call(saga)\r\n            break\r\n          } catch (e) {\r\n            console.log(e)\r\n          }\r\n        }\r\n      }))\r\n    );\r\n  }","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport reduxThunk from \"redux-thunk\"\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport rootReducer from \"./reducers\"\r\nimport rootSaga from \"./sagas\"\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport default configureStore({\r\n    reducer: rootReducer,\r\n    middleware: [sagaMiddleware, reduxThunk],\r\n    devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nsagaMiddleware.run(rootSaga)","import styled from \"styled-components\"\r\n\r\nexport default styled.button`\r\n    border: 2px solid black;\r\n    border-radius: 50%;\r\n    background-color: red;\r\n    width: 33px;\r\n    height: 33px;\r\n`","import { useDispatch } from \"react-redux\"\r\n\r\nimport StyledButton from \"./buttonStyle\"\r\nimport { buttonPress } from \"../../redux/actions\"\r\n\r\nexport default function ButtonMain() {\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <StyledButton onClick={()=>dispatch(buttonPress())}>x</StyledButton>\r\n    )\r\n}","import styled from \"styled-components\"\r\n\r\nexport const StyledThermometer = styled.div`\r\n    display: flex;\r\n    flex-flow: column-reverse nowrap;\r\n    height: 200px;\r\n    width: 40px;\r\n    border: 2px solid black;\r\n`\r\n\r\nexport const ThermometerFill = styled.span`\r\n    background-color: red;\r\n    height: ${({combo}) => combo };\r\n`","import { useSelector } from \"react-redux\"\r\n\r\nimport { selectComboToDisplay } from \"../../redux/selectors\"\r\nimport { StyledThermometer, ThermometerFill } from \"./comboStyle\"\r\n\r\nexport default function ComboBar() {\r\n\r\n    const comboToDisplay = useSelector(selectComboToDisplay)\r\n\r\n    return (\r\n        <StyledThermometer>\r\n            <ThermometerFill combo={comboToDisplay}/>\r\n        </StyledThermometer>\r\n    )\r\n}","import { useSelector } from \"react-redux\"\r\n\r\nimport { selectScoreToDisplay } from \"../../redux/selectors\"\r\n\r\nconst SingleDigit = ({digit}) => \r\n    <li>{digit}</li>\r\n\r\nexport default function FullScore() {\r\n    const score = useSelector(selectScoreToDisplay)\r\n    return (\r\n        <ul>\r\n            { score.map((digit, index) => \r\n                <SingleDigit key={index} digit={digit}/>\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\n","import PageVisible from \"react-page-visibility\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nimport { isVisible as visible, notVisible } from \"./windowSlice\"\r\n\r\nfunction onVisibilityChange(isVisible, dispatch, id=undefined) {\r\n    isVisible ? dispatch(visible({id})) : dispatch(notVisible({id}))\r\n}\r\n\r\nexport default function Page({alias, children}) {\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <>\r\n        <PageVisible onChange={ isVisible => \r\n            onVisibilityChange(isVisible, dispatch, alias) }/>\r\n        {children}\r\n        </>\r\n\r\n    )\r\n}","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectItems } from \"../../redux/selectors\"\r\nimport { purchase } from \"../../redux/actions\"\r\n\r\n\r\nconst Item = ({item, children}) => {\r\n    if (item.visible) {\r\n        return <li>{children}{item.name}</li>\r\n    } else return null\r\n}\r\n\r\nexport default function Shop() {\r\n    const dispatch = useDispatch()\r\n    const items = useSelector(selectItems)\r\n    return (\r\n        <ul>\r\n            {items.map((item, index) => {\r\n                   return (<Item key={index} item={item}>\r\n                       <button onClick={() => dispatch(purchase.request(item))}>{item.ammount || \"x\"}</button>\r\n                   </Item>)\r\n            })}\r\n        </ul>\r\n    )\r\n}","import ButtonMain from \"./features/button/buttonMain\";\nimport ComboBar from \"./features/combo/comboMain\";\nimport FullScore from \"./features/score/scoreMain\";\nimport Page from \"./features/window/page\";\nimport Shop from \"./features/items/shop\";\n\n\nfunction App() {\n  return (\n    <Page>\n      <FullScore/>\n      <ComboBar/>\n      <ButtonMain/>\n      <Shop/>\n    </Page>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n        getCLS(onPerfEntry);\r\n        getFID(onPerfEntry);\r\n        getFCP(onPerfEntry);\r\n        getLCP(onPerfEntry);\r\n        getTTFB(onPerfEntry);\r\n      });\r\n    }\r\n  };\r\n  \r\n  export default reportWebVitals;\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider as Styled } from 'styled-components'\nimport { Provider as Redux } from 'react-redux';\n\nimport store from './redux/configure-store';\nimport theme from './theme'\nimport './global.css';\nimport App from './App';\nimport reportWebVitals from \"./reportWebVitals\";\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Redux store={store}>\n      <Styled theme={theme}>\n        <App />\n      </Styled>\n    </Redux>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}